@page

@using Portal.Web.Common.Extentions
@{
    ViewData["Title"] = "Home";
}

<div id="app">
    <div class="row">
        <div class="col-3">
            <div class="nav flex-column nav-pills" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                <template v-for="(tab,index) in tabs">
                    <a class="nav-link" style="border-radius:0;padding-bottom:9px" :id="'v-pills-'+tab.userName+'-tab'" data-toggle="pill" :href="'#v-pills-'+tab.userName" role="tab" :aria-controls="'v-pills-'+tab.userName" aria-selected="false">

                        {{tab.userName}}

                    </a>
                </template>

            </div>
        </div>
        <div class="col-9">
            <div class="tab-content" id="v-pills-tabContent">
                <template v-for="(tab,index) in tabs">
                    <div class="tab-pane fade" :id="'v-pills-'+tab.userName" role="tabpanel" :aria-labelledby="'v-pills-'+tab.userName+'-tab'">

                        <div class="card">
                            <div class="card-header bg-primary text-white">
                                {{tab.userName}}
                            </div>
                            <div class="card-body">

                                <input class="form-control" id="message" v-model="message" v-on:keyup.enter.prevent="sendMessage(tab)" />
                                <button class="btn btn-primary m-1" id="send" v-on:click="sendMessage(tab)"> <i class="fa fa-paper-plane"></i></button>

                            </div>

                            <ul class="list-group list-group-flush" v-for="(message,index) in messageList">
                                <li class="list-group-item" v-if="message.fromUserId==tab.userId || message.fromUserId==tab.userId">
                                    {{message.message}}
                                </li>
                            </ul>
                        </div>
                    </div>
                </template>
            </div>
        </div>
    </div>

</div>


@section scripts{
    <script src="~/lib/vue/vue.js"></script>
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script>
        var app = new Vue({
            el: "#app",
            data: {
                tabs: [],
                users: [],
                selectedTab: null,
                connection: "",
                message: "",
                messageList: [],
                fromUserName: "@User.Identity.Name",
                fromUserId:"@User.GetUserId()"
            },
            methods: {
                sendMessage: function (tab) {

                    console.table(tab);

                    var vm = this;

                    var msg = {
                        fromUserId: vm.fromUserId,
                        fromUserName: vm.fromUserName,
                        message: vm.message
                    };

                    vm.messageList.splice(0, 0, msg);

                     var index = vm.messageList.length - 1;

                this.connection.send("SendMessage", vm.fromUserId,  tab.userId, vm.message, )
                    .then(function () {

                        console.log("message sent." + vm.message);
                        vm.messageList[0].isSend = true;

                    });
                }
            },
            created: function () { },
            mounted: function () {
                var vm = this;

                $.ajax({ url: "/api/user", method: "GET" })
                    .done(function (data) {
                        vm.users = data

                        for (var i = 0; i < vm.users.length; i++) {
                            var newTab = {
                                userName: vm.users[i].userName,
                                userId: vm.users[i].id,
                                unread: 0,
                                status: false
                            };
                            vm.tabs.push(newTab);
                        }

                    }).fail(function () {
                        //toastr.error("Can not add new bug!");
                    }).always(function () {
                        //vm.clearData();
                    });

                vm.connection = new signalR
                    .HubConnectionBuilder()
                    .withUrl("/chatHub")
                    .build();

                vm.connection.on("updateMessages", function (fromUserId, toUserId,message) {

                      var msg = {
                        fromUserId: fromUserId,
                        fromUserName: toUserId,
                        message: message
                    };

                    vm.messageList.splice(0, 0, msg)
                    console.table(msg);

                });

                vm.connection.start();
            }
        });
    </script>
}
