@page
@{
    ViewData["Title"] = "Home";
}

<div id="app">
    <div class="row">
        <div class="col-3">
            <div class="nav flex-column nav-pills" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                <template v-for="(tab,index) in tabs">
                    <a class="nav-link" style="border-radius:0;padding-bottom:9px" :id="'v-pills-'+tab.userName+'-tab'" data-toggle="pill" :href="'#v-pills-'+tab.userName" role="tab" :aria-controls="'v-pills-'+tab.userName" aria-selected="false">

                        {{tab.userName}}

                    </a>
                </template>

            </div>
        </div>
        <div class="col-9">
            <div class="tab-content" id="v-pills-tabContent">
                <template v-for="(tab,index) in tabs">
                    <div class="tab-pane fade" :id="'v-pills-'+tab.userName" role="tabpanel" :aria-labelledby="'v-pills-'+tab.userName+'-tab'">

                        <div class="card">
                            <div class="card-header bg-primary">
                                {{tab.userName}}
                            </div>
                            <div class="card-body">

                            </div>
                        </div>
                    </div>
                </template>
            </div>
        </div>
    </div>

</div>


@section scripts{
    <script src="~/lib/vue/vue.js"></script>
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script>
        var app = new Vue({
            el: "#app",
            data: {
                tabs: [],
                users: [],
                selectedTab: null,
                connection: "",
            },
            methods: {},
            created: function () { },
            mounted: function () {
                var vm = this;

                $.ajax({ url: "/api/user", method: "GET" })
                    .done(function (data) {
                        vm.users = data

                        for (var i = 0; i < vm.users.length; i++) {
                            var newTab = {
                                userName: vm.users[i].userName,
                                userId: vm.users[i].id,
                                unread: 0,
                                status: false
                            };
                            vm.tabs.push(newTab);
                        }

                        console.log("Done");
                        console.table(vm.tabs);

                    }).fail(function () {
                        //toastr.error("Can not add new bug!");
                    }).always(function () {
                        //vm.clearData();
                    });

                //vm.connection = new signalR
                //    .HubConnectionBuilder()
                //    .withUrl("/chathub")
                //    .build();

                //connection.on("updateMessages", function (fUser, message) {
                //    if (fUser == toUser) {
                //        $("#chat").append('<p>' + message + '</p>');
                //    }

                //});

                //connection.start();
            }
        });
    </script>
}
